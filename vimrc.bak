
set nocompatible
set encoding=utf-8
set autoread
" ========== PLUGINS ===================
call plug#begin(stdpath('data') . '/plugged')

	Plug 'dracula/vim'
	Plug 'preservim/nerdtree'
	Plug 'ryanoasis/vim-devicons'
    Plug 'neovim/nvim-lspconfig'
    Plug 'hrsh7th/cmp-nvim-lsp'
    Plug 'hrsh7th/cmp-buffer'
    Plug 'hrsh7th/cmp-path'
    Plug 'hrsh7th/cmp-cmdline'
    Plug 'hrsh7th/nvim-cmp'
    Plug 'ollykel/v-vim'
    Plug 'sam4llis/nvim-tundra'
    Plug 'folke/tokyonight.nvim', { 'branch': 'main' }
"    Plug 'ziglang/zig.vim'
    " For vsnip users.
    Plug 'hrsh7th/cmp-vsnip'
    Plug 'hrsh7th/vim-vsnip'
    Plug 'nvim-lualine/lualine.nvim'
    " If you want to have icons in your statusline choose one of these
    Plug 'kyazdani42/nvim-web-devicons'
    Plug 'dart-lang/dart-vim-plugin'
    Plug 'thosakwe/vim-flutter'
    " For luasnip users.
    " Plug 'L3MON4D3/LuaSnip'
    " Plug 'saadparwaiz1/cmp_luasnip'

    " For ultisnips users.
    " Plug 'SirVer/ultisnips'
    " Plug 'quangnguyen30192/cmp-nvim-ultisnips'

    " For snippy users.
    " Plug 'dcampos/nvim-snippy'
    " Plug 'dcampos/cmp-snippy'
call plug#end()

lua require('vim')
" ======================================
"let mapleader=","
set timeoutlen=1000
"set mouse=a
"if (has("termguicolors"))
"	set termguicolors
"endif


"set t_Co=256
"let maplocalleader = "\\"
"syntax enable
"colorscheme tokyonight-night
"set number
"set clipboard=unnamedplus
filetype plugin indent on
"set tabstop=4
"set expandtab
"set shiftwidth=4
"set autoindent
"set smartindent

"set incsearch

"set noswapfile
"set nobackup
"set nowb

"set backspace=indent,eol,start

if has('persistent_undo') && isdirectory(expand('~').'/.vim/backups')
  silent !mkdir ~/.vim/backups > /dev/null 2>&1
  set undodir=~/.vim/backups
  set undofile
endif

"inoremap <F9> <C-O>za
"nnoremap <F9> za
"onoremap <F9> <C-C>za
"vnoremap <F9> zf


"nnoremap <C-t> :NERDTreeToggle<CR>
"nnoremap <leader>n :NERDTreeFocus<CR>
"noremap <C-f> :NERDTreeFind<CR>
"noremap <leader>t :NERDTreeToggle<CR>
" Start NERDTree when Vim starts with a directory argument.
"autocmd StdinReadPre * let s:std_in=1
"autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists('s:std_in') |
"    \ execute 'NERDTree' argv()[0] | wincmd p | enew | execute 'cd '.argv()[0] | endif

